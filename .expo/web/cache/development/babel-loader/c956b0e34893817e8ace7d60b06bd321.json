{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TransactionScreen = function (_Component) {\n  _inherits(TransactionScreen, _Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getCameraPermissions = function _callee(domState) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                domState: domState,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.setState({\n                scannedData: data,\n                domState: \"normal\",\n                scanned: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          domState = _this$state.domState,\n          hasCameraPermissions = _this$state.hasCameraPermissions,\n          scannedData = _this$state.scannedData,\n          scanned = _this$state.scanned;\n\n      if (domState === \"scanner\") {\n        return _jsx(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject\n        });\n      }\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: hasCameraPermissions ? scannedData : \"Request for Camera Permission\"\n        }), _jsx(TouchableOpacity, {\n          style: [styles.button, {\n            marginTop: 25\n          }],\n          onPress: function onPress() {\n            return _this2.getCameraPermissions(\"scanner\");\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Scan QR Code\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return TransactionScreen;\n}(Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#D0E6F0\"\n  },\n  text: {\n    color: \"#4C5D70\",\n    fontSize: 15\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 15,\n    borderWidth: 2\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\"\n  }\n});","map":{"version":3,"sources":["C:/Users/PRASHAM/whjr/Project-C69/PRO-C69-ProjectTemplate-main/screens/Ride.js"],"names":["React","Component","Permissions","BarCodeScanner","TransactionScreen","props","getCameraPermissions","domState","askAsync","CAMERA","status","setState","hasCameraPermissions","scanned","handleBarCodeScanned","type","data","scannedData","state","undefined","StyleSheet","absoluteFillObject","styles","container","text","button","marginTop","buttonText","create","flex","justifyContent","alignItems","backgroundColor","color","fontSize","width","height","borderRadius","borderWidth"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;;IAEqBC,iB;;;;;AACpB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,UAUnBC,oBAVmB,GAUI,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACGL,WAAW,CAACM,QAAZ,CAAqBN,WAAW,CAACO,MAAjC,CADH;;AAAA;AAAA;AACdC,cAAAA,MADc,yBACdA,MADc;;AAGtB,oBAAKC,QAAL,CAAc;AAIbC,gBAAAA,oBAAoB,EAAEF,MAAM,KAAK,SAJpB;AAKbH,gBAAAA,QAAQ,EAAEA,QALG;AAMbM,gBAAAA,OAAO,EAAE;AANI,eAAd;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ;;AAAA,UAuBnBC,oBAvBmB,GAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,IAAT,QAASA,IAAT,EAAeC,IAAf,QAAeA,IAAf;;AACtB,oBAAKL,QAAL,CAAc;AACbM,gBAAAA,WAAW,EAAED,IADA;AAEbT,gBAAAA,QAAQ,EAAE,QAFG;AAGbM,gBAAAA,OAAO,EAAE;AAHI,eAAd;;AADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBJ;;AAElB,UAAKK,KAAL,GAAa;AACZX,MAAAA,QAAQ,EAAE,QADE;AAEZK,MAAAA,oBAAoB,EAAE,IAFV;AAGZC,MAAAA,OAAO,EAAE,KAHG;AAIZI,MAAAA,WAAW,EAAE;AAJD,KAAb;AAFkB;AAQlB;;;;WAuBD,kBAAS;AAAA;;AACR,wBAAiE,KAAKC,KAAtE;AAAA,UAAQX,QAAR,eAAQA,QAAR;AAAA,UAAkBK,oBAAlB,eAAkBA,oBAAlB;AAAA,UAAwCK,WAAxC,eAAwCA,WAAxC;AAAA,UAAqDJ,OAArD,eAAqDA,OAArD;;AACA,UAAIN,QAAQ,KAAK,SAAjB,EAA4B;AAC3B,eACC,KAAC,cAAD;AACC,UAAA,gBAAgB,EAAEM,OAAO,GAAGM,SAAH,GAAe,KAAKL,oBAD9C;AAEC,UAAA,KAAK,EAAEM,UAAU,CAACC;AAFnB,UADD;AAMA;;AAED,aACC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA,oBACEZ,oBAAoB,GAAGK,WAAH,GAAiB;AADvC,UADD,EAIC,KAAC,gBAAD;AACC,UAAA,KAAK,EAAE,CAACK,MAAM,CAACG,MAAR,EAAgB;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAhB,CADR;AAEC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACpB,oBAAL,CAA0B,SAA1B,CAAN;AAAA,WAFV;AAAA,oBAIC,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEgB,MAAM,CAACK,UAApB;AAAA;AAAA;AAJD,UAJD;AAAA,QADD;AAaA;;;;EAxD6C1B,S;;SAA1BG,iB;AA2DrB,IAAMkB,MAAM,GAAGF,UAAU,CAACQ,MAAX,CAAkB;AAChCL,EAAAA,SAAS,EAAE;AACVM,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,cAAc,EAAE,QAFN;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,eAAe,EAAE;AAJP,GADqB;AAOhCR,EAAAA,IAAI,EAAE;AACLS,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAP0B;AAWhCT,EAAAA,MAAM,EAAE;AACPU,IAAAA,KAAK,EAAE,KADA;AAEPC,IAAAA,MAAM,EAAE,EAFD;AAGPN,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,eAAe,EAAE,SALV;AAMPK,IAAAA,YAAY,EAAE,EANP;AAOPC,IAAAA,WAAW,EAAE;AAPN,GAXwB;AAoBhCX,EAAAA,UAAU,EAAE;AACXO,IAAAA,QAAQ,EAAE,EADC;AAEXD,IAAAA,KAAK,EAAE;AAFI;AApBoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\n\nexport default class TransactionScreen extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdomState: \"normal\",\n\t\t\thasCameraPermissions: null,\n\t\t\tscanned: false,\n\t\t\tscannedData: \"\",\n\t\t};\n\t}\n\n\tgetCameraPermissions = async (domState) => {\n\t\tconst { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n\t\tthis.setState({\n\t\t\t/*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n\t\t\thasCameraPermissions: status === \"granted\",\n\t\t\tdomState: domState,\n\t\t\tscanned: false,\n\t\t});\n\t};\n\n\thandleBarCodeScanned = async ({ type, data }) => {\n\t\tthis.setState({\n\t\t\tscannedData: data,\n\t\t\tdomState: \"normal\",\n\t\t\tscanned: true,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { domState, hasCameraPermissions, scannedData, scanned } = this.state;\n\t\tif (domState === \"scanner\") {\n\t\t\treturn (\n\t\t\t\t<BarCodeScanner\n\t\t\t\t\tonBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n\t\t\t\t\tstyle={StyleSheet.absoluteFillObject}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t<Text style={styles.text}>\n\t\t\t\t\t{hasCameraPermissions ? scannedData : \"Request for Camera Permission\"}\n\t\t\t\t</Text>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tstyle={[styles.button, { marginTop: 25 }]}\n\t\t\t\t\tonPress={() => this.getCameraPermissions(\"scanner\")}\n\t\t\t\t>\n\t\t\t\t\t<Text style={styles.buttonText}>Scan QR Code</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tbackgroundColor: \"#D0E6F0\",\n\t},\n\ttext: {\n\t\tcolor: \"#4C5D70\",\n\t\tfontSize: 15,\n\t},\n\tbutton: {\n\t\twidth: \"43%\",\n\t\theight: 55,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tbackgroundColor: \"#FBE5C0\",\n\t\tborderRadius: 15,\n\t\tborderWidth: 2,\n\t},\n\tbuttonText: {\n\t\tfontSize: 24,\n\t\tcolor: \"#4C5D70\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}